class Solution:
    def canVisitAllRooms(self, rooms):
        keys = set([0])
        for i in range(len(rooms)):
            if i not in keys:
                keys_temp = set()
                for j in keys:
                    keys_temp.update(rooms[j])
                keys |= keys_temp
            else:
                keys.update(rooms[i])

        keys = list(keys)
        # visited.sort()
        if len(keys) < len(rooms):
            return False
        for i in range(len(rooms)):
            if keys[i] != i:
                return False
        return True

rooms = [[2],[],[1]]
rooms1 = [[1],[2],[3],[]]
rooms2 = [[1,3],[3,0,1],[2],[0]]
rooms3 = [[1],[2],[],[3]]

slt = Solution()
print(slt.canVisitAllRooms(rooms))
print(slt.canVisitAllRooms(rooms1))
print(slt.canVisitAllRooms(rooms2))
print(slt.canVisitAllRooms(rooms3))

# s1 = set([1, 2, 3, 1, 2, 3])
# s2 = set([9])
# s1 |= s2
# print(s1)