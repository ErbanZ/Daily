# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def preorderTraversal(self, root):
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        # # 递归
        # res = list()
        # def preordef(root):
        #     if not root: return
        #     res.append(root.val)
        #     preordef(root.left)
        #     preordef(root.right)
        # preordef(root)
        # return res

        # #  迭代
        # if not root: return
        # res = list()
        # stack, node = [], root
        # while stack or node:
        #     while node:
        #         res.append(node.val)
        #         stack.append(node)
        #         node = node.left
        #     node = stack.pop()
        #     node = node.right
        # return res        
