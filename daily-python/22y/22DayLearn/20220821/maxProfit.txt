class Solution:
    def maxProfit(self, prices):
        # res = float("-inf")
        # slow = prices[0]

        # for i in prices:
        #     slow = min(slow, i)
        #     res = max(i-slow, res)

        # return res
        
        m = len(prices)
        dp = [[0 for j in range(2)] for i in range(m)]
        dp[0][0], dp[0][1] = 0, -prices[0]
        
        for i in range(1, m):
            dp[i][0] = max(dp[i-1][0], dp[i-1][1] + prices[i])
            dp[i][1] = max(dp[i-1][1], - prices[i])

        return dp[m-1][0]

prices = [7,1,5,3,6,4]
# prices = [1,2,3,4,5]
# prices = [5,4,3,2,1]
slt = Solution()
print(slt.maxProfit(prices))

# print([0 for i in range(5)])
# print([[0 for i in range(5)] for j in range(4)])
